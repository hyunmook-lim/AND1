{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;\n\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LoginAction } from \"../actions/LoginAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TestLogoutContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  position: absolute\\n  top: 14%;\\n  bottom: 70%\\n  right: 10%;\\n  left: 10%\\n\"])));\nvar TestLogout = styled.TouchableOpacity(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \"\\n  justify-content: center;\\n  align-items:center\\n  width: 150px;\\n  height: 50px;\\n  border-radius: 15px\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.button;\n});\nvar TestText = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: 20px;\\n  font-weight: bold;\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.normalText;\n});\nvar Container = styled.SafeAreaView(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: \", \";\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.background;\n});\nvar Text = styled.Text(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: \", \"\\n  position: absolute\\n  font-size: 40px;\\n  font-weight: bold\\n\"])), function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.normalText;\n});\nvar InfoContainer = styled.View(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  flex: 0.44;\\n  justify-content: flex-start;\\n  align-items: flex-start;\\n\"])));\nvar InfoText = styled.Text(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  font-size: 20px;\\n  color: \", \";\\n\"])), function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.normalText;\n});\nexport default function Setting() {\n  var dispatch = useDispatch();\n  var loginInfo = useSelector(function (state) {\n    return state.loginInfo;\n  });\n  return _jsxs(Container, {\n    children: [_jsx(TestLogoutContainer, {\n      children: _jsx(TestLogout, {\n        onPress: function onPress() {\n          dispatch(LoginAction(false));\n          console.log(\"setting page: log out\");\n        },\n        children: _jsx(TestText, {\n          children: \"Test Logout\"\n        })\n      })\n    }), _jsx(InfoContainer, {\n      children: _jsx(InfoText, {\n        children: \"name\\n\" + loginInfo.name + \"\\n\\nemail\\n\" + loginInfo.email\n      })\n    }), _jsx(Text, {\n      children: \"Setting Page\"\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/yook/Programming/Mobile/AND1/src/screens/Setting.js"],"names":["React","styled","useDispatch","useSelector","LoginAction","TestLogoutContainer","View","TestLogout","TouchableOpacity","theme","button","TestText","Text","normalText","Container","SafeAreaView","background","InfoContainer","InfoText","Setting","dispatch","loginInfo","state","console","log","name","email"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT;;;AAEA,IAAMC,mBAAmB,GAAGJ,MAAM,CAACK,IAAV,8MAAzB;AAUA,IAAMC,UAAU,GAAGN,MAAM,CAACO,gBAAV,oNACM;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAArB;AAAA,CADN,CAAhB;AASA,IAAMC,QAAQ,GAAGV,MAAM,CAACW,IAAV,yIACH;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACI,UAArB;AAAA,CADG,CAAd;AAMA,IAAMC,SAAS,GAAGb,MAAM,CAACc,YAAV,0KAIO;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACO,UAArB;AAAA,CAJP,CAAf;AAOA,IAAMJ,IAAI,GAAGX,MAAM,CAACW,IAAV,6JACC;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACI,UAArB;AAAA,CADD,CAAV;AAOA,IAAMI,aAAa,GAAGhB,MAAM,CAACK,IAAV,yJAAnB;AAMA,IAAMY,QAAQ,GAAGjB,MAAM,CAACW,IAAV,mHAEH;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACI,UAArB;AAAA,CAFG,CAAd;AAKA,eAAe,SAASM,OAAT,GAAmB;AAChC,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,MAAMmB,SAAS,GAAGlB,WAAW,CAAC,UAACmB,KAAD,EAAW;AACvC,WAAOA,KAAK,CAACD,SAAb;AACD,GAF4B,CAA7B;AAIA,SACE,MAAC,SAAD;AAAA,eACE,KAAC,mBAAD;AAAA,gBACE,KAAC,UAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbD,UAAAA,QAAQ,CAAChB,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAmB,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,SAJH;AAAA,kBAME,KAAC,QAAD;AAAA;AAAA;AANF;AADF,MADF,EAWE,KAAC,aAAD;AAAA,gBACE,KAAC,QAAD;AAAA,6BAAoBH,SAAS,CAACI,IAA9B,mBAAgDJ,SAAS,CAACK;AAA1D;AADF,MAXF,EAcE,KAAC,IAAD;AAAA;AAAA,MAdF;AAAA,IADF;AAkBD","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LoginAction } from \"../actions/LoginAction\";\n\nconst TestLogoutContainer = styled.View`\n  justify-content: center;\n  align-items: center;\n  position: absolute\n  top: 14%;\n  bottom: 70%\n  right: 10%;\n  left: 10%\n`;\n\nconst TestLogout = styled.TouchableOpacity`\n  background-color: ${({ theme }) => theme.button}\n  justify-content: center;\n  align-items:center\n  width: 150px;\n  height: 50px;\n  border-radius: 15px\n`;\n\nconst TestText = styled.Text`\n  color: ${({ theme }) => theme.normalText};\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst Container = styled.SafeAreaView`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nconst Text = styled.Text`\n  color: ${({ theme }) => theme.normalText}\n  position: absolute\n  font-size: 40px;\n  font-weight: bold\n`;\n\nconst InfoContainer = styled.View`\n  flex: 0.44;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst InfoText = styled.Text`\n  font-size: 20px;\n  color: ${({ theme }) => theme.normalText};\n`;\n\nexport default function Setting() {\n  const dispatch = useDispatch();\n\n  const loginInfo = useSelector((state) => {\n    return state.loginInfo;\n  });\n\n  return (\n    <Container>\n      <TestLogoutContainer>\n        <TestLogout\n          onPress={() => {\n            dispatch(LoginAction(false));\n            console.log(\"setting page: log out\");\n          }}\n        >\n          <TestText>Test Logout</TestText>\n        </TestLogout>\n      </TestLogoutContainer>\n      <InfoContainer>\n        <InfoText>{`name\\n${loginInfo.name}\\n\\nemail\\n${loginInfo.email}`}</InfoText>\n      </InfoContainer>\n      <Text>Setting Page</Text>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}