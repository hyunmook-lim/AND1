{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get(\"window\").width;\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar MiddleContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  width: \", \"px\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 10px\\n  margin: 3px;\\n\"])), width);\nvar TextArea = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  width: 80%\\n  height: 50px;\\n  padding-left: 10px\\n\"])));\nvar Text = styled.Text(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  align-self: flex-start\\n  font-size: \", \"\\n  color: \", \";\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.normalTextSize;\n}, function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.grayText;\n});\nvar InputArea = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  width: 80%;\\n  height: 50px;\\n  background-color: \", \";\\n  opacity: 0.7\\n  align-items: flex-start;\\n  justify-content: center;\\n  border-radius: 12px\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.emailPWInput;\n});\nvar Input = styled.TextInput(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  color: black;\\n  font-size: 15px;\\n  height: 50px;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  width: 100%;\\n\"])));\nexport default function LoginEmailPW(email, password) {\n  var passwordRef = useRef();\n  return _jsxs(Container, {\n    children: [_jsxs(MiddleContainer, {\n      children: [_jsx(TextArea, {\n        children: _jsx(Text, {\n          children: \"E mail\"\n        })\n      }), _jsx(InputArea, {\n        children: _jsx(Input, {\n          placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          keyboardType: \"email-address\",\n          placeholderTextColor: \"gray\",\n          returnKeyType: \"next\",\n          onSubmitEditing: function onSubmitEditing() {\n            passwordRef.current.focus();\n          },\n          onPress: function onPress() {\n            return Alert.alert(\"hihi\");\n          },\n          autoComplete: \"email\",\n          autoFocus: true,\n          maxLength: 15,\n          value: email\n        })\n      })]\n    }), _jsxs(MiddleContainer, {\n      children: [_jsx(TextArea, {\n        children: _jsx(Text, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        })\n      }), _jsx(InputArea, {\n        children: _jsx(Input, {\n          ref: passwordRef,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          placeholderTextColor: \"gray\",\n          secureTextEntry: true,\n          autoComplete: \"password\",\n          blurOnsubmit: true,\n          value: password\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/yook/Programming/Mobile/AND1/src/components/LoginEmailPW.js"],"names":["React","useRef","styled","width","Dimensions","get","Container","View","MiddleContainer","TextArea","Text","theme","normalTextSize","grayText","InputArea","emailPWInput","Input","TextInput","LoginEmailPW","email","password","passwordRef","current","focus","Alert","alert"],"mappings":";;;;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;;AAGA,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAvC;AAEA,IAAMG,SAAS,GAAGJ,MAAM,CAACK,IAAV,gIAAf;AAKA,IAAMC,eAAe,GAAGN,MAAM,CAACK,IAAV,2LACVJ,KADU,CAArB;AAQA,IAAMM,QAAQ,GAAGP,MAAM,CAACK,IAAV,uLAAd;AAQA,IAAMG,IAAI,GAAGR,MAAM,CAACQ,IAAV,4IAEK;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,cAArB;AAAA,CAFL,EAGC;AAAA,MAAGD,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACE,QAArB;AAAA,CAHD,CAAV;AAMA,IAAMC,SAAS,GAAGZ,MAAM,CAACK,IAAV,yOAGO;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACI,YAArB;AAAA,CAHP,CAAf;AAUA,IAAMC,KAAK,GAAGd,MAAM,CAACe,SAAV,mMAAX;AASA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACpD,MAAMC,WAAW,GAAGpB,MAAM,EAA1B;AAEA,SACE,MAAC,SAAD;AAAA,eACE,MAAC,eAAD;AAAA,iBACE,KAAC,QAAD;AAAA,kBACE,KAAC,IAAD;AAAA;AAAA;AADF,QADF,EAIE,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACE,UAAA,WAAW,EAAC,yDADd;AAEE,UAAA,YAAY,EAAC,eAFf;AAGE,UAAA,oBAAoB,EAAC,MAHvB;AAIE,UAAA,aAAa,EAAC,MAJhB;AAKE,UAAA,eAAe,EAAE,2BAAM;AACrBoB,YAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAApB;AACD,WAPH;AAQE,UAAA,OAAO,EAAE;AAAA,mBAAMC,KAAK,CAACC,KAAN,CAAY,MAAZ,CAAN;AAAA,WARX;AASE,UAAA,YAAY,EAAC,OATf;AAUE,UAAA,SAAS,EAAE,IAVb;AAWE,UAAA,SAAS,EAAE,EAXb;AAYE,UAAA,KAAK,EAAEN;AAZT;AADF,QAJF;AAAA,MADF,EAsBE,MAAC,eAAD;AAAA,iBACE,KAAC,QAAD;AAAA,kBACE,KAAC,IAAD;AAAA;AAAA;AADF,QADF,EAIE,KAAC,SAAD;AAAA,kBACE,KAAC,KAAD;AACE,UAAA,GAAG,EAAEE,WADP;AAEE,UAAA,WAAW,EAAC,+DAFd;AAGE,UAAA,oBAAoB,EAAC,MAHvB;AAIE,UAAA,eAAe,EAAE,IAJnB;AAKE,UAAA,YAAY,EAAC,UALf;AAME,UAAA,YAAY,EAAE,IANhB;AAOE,UAAA,KAAK,EAAED;AAPT;AADF,QAJF;AAAA,MAtBF;AAAA,IADF;AAyCD","sourcesContent":["// not used\n\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Alert, Dimensions } from \"react-native\";\n\nconst width = Dimensions.get(\"window\").width;\n\nconst Container = styled.View`\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MiddleContainer = styled.View`\n  width: ${width}px\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px\n  margin: 3px;\n`;\n\nconst TextArea = styled.View`\n  justify-content: center;\n  align-items: center;\n  width: 80%\n  height: 50px;\n  padding-left: 10px\n`;\n\nconst Text = styled.Text`\n  align-self: flex-start\n  font-size: ${({ theme }) => theme.normalTextSize}\n  color: ${({ theme }) => theme.grayText};\n`;\n\nconst InputArea = styled.View`\n  width: 80%;\n  height: 50px;\n  background-color: ${({ theme }) => theme.emailPWInput};\n  opacity: 0.7\n  align-items: flex-start;\n  justify-content: center;\n  border-radius: 12px\n`;\n\nconst Input = styled.TextInput`\n  color: black;\n  font-size: 15px;\n  height: 50px;\n  padding-left: 15px;\n  padding-right: 15px;\n  width: 100%;\n`;\n\nexport default function LoginEmailPW(email, password) {\n  const passwordRef = useRef();\n\n  return (\n    <Container>\n      <MiddleContainer>\n        <TextArea>\n          <Text>E mail</Text>\n        </TextArea>\n        <InputArea>\n          <Input\n            placeholder=\"이메일을 입력하세요\"\n            keyboardType=\"email-address\"\n            placeholderTextColor=\"gray\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() => {\n              passwordRef.current.focus();\n            }}\n            onPress={() => Alert.alert(\"hihi\")}\n            autoComplete=\"email\"\n            autoFocus={true}\n            maxLength={15}\n            value={email}\n          />\n        </InputArea>\n      </MiddleContainer>\n      <MiddleContainer>\n        <TextArea>\n          <Text>비밀번호</Text>\n        </TextArea>\n        <InputArea>\n          <Input\n            ref={passwordRef}\n            placeholder=\"비밀번호를 입력하세요\"\n            placeholderTextColor=\"gray\"\n            secureTextEntry={true}\n            autoComplete=\"password\"\n            blurOnsubmit={true}\n            value={password}\n          />\n        </InputArea>\n      </MiddleContainer>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}