{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styled from \"styled-components/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, readLoginInfo } from \"../data/firebase\";\nimport { LoginAction } from \"../actions/LoginAction\";\nimport { ProgressAction } from \"../actions/ProgressAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar width = Dimensions.get(\"window\").width;\nvar Container = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  align-items: center;\\n  background-color: \", \";\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.background;\n});\nvar SignupContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: 10px;\\n  right: 30px;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar SignupButton = styled.TouchableOpacity(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar SignupText = styled.Text(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: 20px;\\n  font-weight: bold;\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.normalText;\n});\nvar IDPWContainer = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: 40px;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar MiddleContainer = styled.View(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  width: \", \"px\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 10px\\n  margin: 3px;\\n\"])), width);\nvar TextArea = styled.View(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  width: 80%\\n  height: 50px;\\n  padding-left: 10px\\n\"])));\nvar Text = styled.Text(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  align-self: flex-start\\n  font-size: \", \"\\n  color: \", \";\\n\"])), function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.normalTextSize;\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.grayText;\n});\nvar InputArea = styled.View(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  width: 80%;\\n  height: 50px;\\n  background-color: \", \";\\n  opacity: 0.7\\n  align-items: flex-start;\\n  justify-content: center;\\n  border-radius: 12px\\n\"])), function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.emailPWInput;\n});\nvar Input = styled.TextInput(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n  color: black;\\n  font-size: 15px;\\n  height: 50px;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  width: 100%;\\n\"])));\nvar FindIDPWContainer = styled.View(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: 235px;\\n  flex-direction: row\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar FindIDButton = styled.TouchableOpacity(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  padding: 10px;\\n\"])));\nvar FindPWButton = styled.TouchableOpacity(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  padding: 10px;\\n  margin: 10px;\\n\"])));\nvar FindIDPWText = styled.Text(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: \", \"\\n  margin: 10px;\\n\"])), function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.grayText;\n}, function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.normalTextSize;\n});\nvar LoginButtonContainer = styled.View(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  width: \", \"px;\\n  top: 330px;\\n\"])), width);\nvar LoginButtonText = styled.Text(_templateObject16 || (_templateObject16 = _taggedTemplateLiteralLoose([\"\\n  font-size: \", \"\\n  font-weight: bold;\\n  color: \", \"\\n\"])), function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.buttonTextSize;\n}, function (_ref9) {\n  var theme = _ref9.theme;\n  return theme.normalText;\n});\nexport default function EmailLogin(_ref10) {\n  var navigation = _ref10.navigation;\n  var dispatch = useDispatch();\n  passwordRef = useRef();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disabled = _useState6[0],\n      setDisabled = _useState6[1];\n\n  function _SignupButton() {\n    navigation.navigate(\"Signup\");\n    console.log(\"Email login page: move to sign in page\");\n  }\n\n  function _onPressLoginButton() {\n    var user, loginInfo;\n    return _regeneratorRuntime.async(function _onPressLoginButton$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(ProgressAction(true));\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(login(email, password));\n\n          case 4:\n            user = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(readLoginInfo(email));\n\n          case 7:\n            loginInfo = _context.sent;\n            dispatch(LoginAction(loginInfo.name, email, password));\n            dispatch(ProgressAction(false));\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(ProgressAction(false));\n\n            if (_context.t0.message == \"Firebase: Error (auth/wrong-password).\") {\n              Alert.alert(\"비밀번호를 확인해주세요\");\n              console.log(\"EmailLoginPage: login error\\nerror message: \" + _context.t0.message);\n            } else {\n              Alert.alert(\"존재하지않는 이메일 계정입니다\");\n              console.log(\"EmailLoginPage: login error\\nerror message: \" + _context.t0.message);\n            }\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  useEffect(function () {\n    setDisabled(!(email && password));\n  }, [email, password]);\n  var LoginButton = styled.TouchableOpacity(_templateObject17 || (_templateObject17 = _taggedTemplateLiteralLoose([\"\\n    justify-content: center;\\n    align-items: center;\\n    width: 170px;\\n    height: 50px;\\n    background-color: \", \";\\n    border-radius: 12px;\\n    opacity: \", \";\\n  \"])), function (_ref11) {\n    var theme = _ref11.theme;\n    return theme.button;\n  }, disabled ? \"0.25\" : \"1\");\n  return _jsxs(Container, {\n    children: [_jsx(SignupContainer, {\n      children: _jsx(SignupButton, {\n        onPress: _SignupButton,\n        children: _jsx(SignupText, {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n        })\n      })\n    }), _jsxs(IDPWContainer, {\n      children: [_jsxs(MiddleContainer, {\n        children: [_jsx(TextArea, {\n          children: _jsx(Text, {\n            children: \"E mail\"\n          })\n        }), _jsx(InputArea, {\n          children: _jsx(Input, {\n            placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            keyboardType: \"email-address\",\n            placeholderTextColor: \"gray\",\n            returnKeyType: \"next\",\n            onChangeText: function onChangeText(text) {\n              setEmail(text);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              passwordRef.current.focus();\n            },\n            onPress: function onPress() {\n              return Alert.alert(\"hihi\");\n            },\n            autoComplete: \"email\",\n            autoFocus: true,\n            maxLength: 30,\n            value: email,\n            autoCapitalize: \"none\"\n          })\n        })]\n      }), _jsxs(MiddleContainer, {\n        children: [_jsx(TextArea, {\n          children: _jsx(Text, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          })\n        }), _jsx(InputArea, {\n          children: _jsx(Input, {\n            ref: passwordRef,\n            onChangeText: function onChangeText(text) {\n              setPassword(text);\n            },\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            placeholderTextColor: \"gray\",\n            secureTextEntry: true,\n            autoComplete: \"password\",\n            blurOnsubmit: true,\n            value: password,\n            maxLength: 30,\n            returnKeyType: \"done\",\n            onSubmitEditing: _onPressLoginButton\n          })\n        })]\n      })]\n    }), _jsxs(FindIDPWContainer, {\n      children: [_jsx(FindIDButton, {\n        children: _jsx(FindIDPWText, {\n          children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n        })\n      }), _jsx(FindPWButton, {\n        children: _jsx(FindIDPWText, {\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uCC3E\\uAE30\"\n        })\n      })]\n    }), _jsx(LoginButtonContainer, {\n      children: _jsx(LoginButton, {\n        onPress: _onPressLoginButton,\n        disabled: disabled,\n        children: _jsx(LoginButtonText, {\n          children: \"\\uB85C\\uADF8\\uC778\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/yook/Programming/Mobile/AND1/src/screens/EmailLogin.js"],"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","login","readLoginInfo","LoginAction","ProgressAction","width","Dimensions","get","Container","SafeAreaView","theme","background","SignupContainer","View","SignupButton","TouchableOpacity","SignupText","Text","normalText","IDPWContainer","MiddleContainer","TextArea","normalTextSize","grayText","InputArea","emailPWInput","Input","TextInput","FindIDPWContainer","FindIDButton","FindPWButton","FindIDPWText","LoginButtonContainer","LoginButtonText","buttonTextSize","EmailLogin","navigation","dispatch","passwordRef","email","setEmail","password","setPassword","disabled","setDisabled","_SignupButton","navigate","console","log","_onPressLoginButton","user","loginInfo","name","message","Alert","alert","LoginButton","button","text","current","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Alert, Dimensions } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, readLoginInfo } from \"../data/firebase\";\nimport { LoginAction } from \"../actions/LoginAction\";\nimport { ProgressAction } from \"../actions/ProgressAction\";\n\nconst width = Dimensions.get(\"window\").width;\n\nconst Container = styled.SafeAreaView`\n  flex: 1;\n  align-items: center;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nconst SignupContainer = styled.View`\n  position: absolute;\n  top: 10px;\n  right: 30px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SignupButton = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: center;\n`;\nconst SignupText = styled.Text`\n  color: ${({ theme }) => theme.normalText};\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst IDPWContainer = styled.View`\n  position: absolute;\n  top: 40px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MiddleContainer = styled.View`\n  width: ${width}px\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px\n  margin: 3px;\n`;\n\nconst TextArea = styled.View`\n  justify-content: center;\n  align-items: center;\n  width: 80%\n  height: 50px;\n  padding-left: 10px\n`;\n\nconst Text = styled.Text`\n  align-self: flex-start\n  font-size: ${({ theme }) => theme.normalTextSize}\n  color: ${({ theme }) => theme.grayText};\n`;\n\nconst InputArea = styled.View`\n  width: 80%;\n  height: 50px;\n  background-color: ${({ theme }) => theme.emailPWInput};\n  opacity: 0.7\n  align-items: flex-start;\n  justify-content: center;\n  border-radius: 12px\n`;\n\nconst Input = styled.TextInput`\n  color: black;\n  font-size: 15px;\n  height: 50px;\n  padding-left: 15px;\n  padding-right: 15px;\n  width: 100%;\n`;\n\nconst FindIDPWContainer = styled.View`\n  position: absolute;\n  top: 235px;\n  flex-direction: row\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FindIDButton = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n`;\n\nconst FindPWButton = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  margin: 10px;\n`;\n\nconst FindIDPWText = styled.Text`\n  color: ${({ theme }) => theme.grayText};\n  font-size: ${({ theme }) => theme.normalTextSize}\n  margin: 10px;\n`;\n\nconst LoginButtonContainer = styled.View`\n  justify-content: center;\n  align-items: center;\n  width: ${width}px;\n  top: 330px;\n`;\n\nconst LoginButtonText = styled.Text`\n  font-size: ${({ theme }) => theme.buttonTextSize}\n  font-weight: bold;\n  color: ${({ theme }) => theme.normalText}\n`;\n\nexport default function EmailLogin({ navigation }) {\n  const dispatch = useDispatch();\n\n  passwordRef = useRef();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n\n  function _SignupButton() {\n    navigation.navigate(\"Signup\");\n    console.log(`Email login page: move to sign in page`);\n  }\n\n  async function _onPressLoginButton() {\n    try {\n      dispatch(ProgressAction(true));\n      const user = await login(email, password);\n      const loginInfo = await readLoginInfo(email);\n      dispatch(LoginAction(loginInfo.name, email, password));\n      dispatch(ProgressAction(false));\n    } catch (e) {\n      dispatch(ProgressAction(false));\n      if (e.message == \"Firebase: Error (auth/wrong-password).\") {\n        Alert.alert(\"비밀번호를 확인해주세요\");\n        console.log(`EmailLoginPage: login error\\nerror message: ${e.message}`);\n      } else {\n        Alert.alert(\"존재하지않는 이메일 계정입니다\");\n        console.log(`EmailLoginPage: login error\\nerror message: ${e.message}`);\n      }\n    }\n  }\n\n  useEffect(() => {\n    setDisabled(!(email && password));\n  }, [email, password]);\n\n  const LoginButton = styled.TouchableOpacity`\n    justify-content: center;\n    align-items: center;\n    width: 170px;\n    height: 50px;\n    background-color: ${({ theme }) => theme.button};\n    border-radius: 12px;\n    opacity: ${disabled ? \"0.25\" : \"1\"};\n  `;\n  return (\n    <Container>\n      <SignupContainer>\n        <SignupButton onPress={_SignupButton}>\n          <SignupText>회원가입하기</SignupText>\n        </SignupButton>\n      </SignupContainer>\n      <IDPWContainer>\n        <MiddleContainer>\n          <TextArea>\n            <Text>E mail</Text>\n          </TextArea>\n          <InputArea>\n            <Input\n              placeholder=\"이메일을 입력하세요\"\n              keyboardType=\"email-address\"\n              placeholderTextColor=\"gray\"\n              returnKeyType=\"next\"\n              onChangeText={(text) => {\n                setEmail(text);\n              }}\n              onSubmitEditing={() => {\n                passwordRef.current.focus();\n              }}\n              onPress={() => Alert.alert(\"hihi\")}\n              autoComplete=\"email\"\n              autoFocus={true}\n              maxLength={30}\n              value={email}\n              autoCapitalize=\"none\"\n            />\n          </InputArea>\n        </MiddleContainer>\n        <MiddleContainer>\n          <TextArea>\n            <Text>비밀번호</Text>\n          </TextArea>\n          <InputArea>\n            <Input\n              ref={passwordRef}\n              onChangeText={(text) => {\n                setPassword(text);\n              }}\n              placeholder=\"비밀번호를 입력하세요\"\n              placeholderTextColor=\"gray\"\n              secureTextEntry={true}\n              autoComplete=\"password\"\n              blurOnsubmit={true}\n              value={password}\n              maxLength={30}\n              returnKeyType=\"done\"\n              onSubmitEditing={_onPressLoginButton}\n            />\n          </InputArea>\n        </MiddleContainer>\n      </IDPWContainer>\n      <FindIDPWContainer>\n        <FindIDButton>\n          <FindIDPWText>아이디 찾기</FindIDPWText>\n        </FindIDButton>\n        <FindPWButton>\n          <FindIDPWText>패스워드 찾기</FindIDPWText>\n        </FindPWButton>\n      </FindIDPWContainer>\n      <LoginButtonContainer>\n        <LoginButton onPress={_onPressLoginButton} disabled={disabled}>\n          <LoginButtonText>로그인</LoginButtonText>\n        </LoginButton>\n      </LoginButtonContainer>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}